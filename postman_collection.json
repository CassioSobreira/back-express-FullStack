{
	"info": {
		"_postman_id": "YOUR_COLLECTION_ID",
		"name": "API Auth & Movies (v1.1 - Manual)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "YOUR_EXPORTER_ID"
	},
	"item": [
		{
			"name": "1. Cadastro (Register)",
			"item": [
				{
					"name": "Cadastro bem-sucedido",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Usuário Filme Postman\",\n  \"email\": \"filme.postman@exemplo.com\",\n  \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro] Cadastro com E-mail repetido (409)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Outro Usuário\",\n  \"email\": \"filme.postman@exemplo.com\",\n  \"password\": \"password456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro] Cadastro Mal Formatado (sem nome) (400)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"semnome.postman@exemplo.com\",\n  \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "2. Login",
			"item": [
				{
					"name": "Login bem-sucedido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva o token numa variável de coleção para uso futuro (opcional, mas útil)",
									"pm.test(\"Token received and saved\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.token) {",
									"        pm.collectionVariables.set(\"authToken\", jsonData.token);",
									"        console.log(\"Token salvo na variável 'authToken'\");",
									"    } else {",
									"        console.log(\"Token não encontrado na resposta\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"filme.postman@exemplo.com\",\n  \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro] Login com Senha inválida (401)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"filme.postman@exemplo.com\",\n  \"password\": \"senhaerrada\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Rota Protegida (Auth - Legado v1.0)",
			"item": [
				{
					"name": "Acesso a /protected com token válido",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}", 
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/protected",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"protected"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro Auth] Acesso sem token (401)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/protected",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"protected"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro Auth] Acesso com token inválido (401)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "um.token.falso",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/protected",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"protected"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Filmes (CRUD)",
			"item": [
				{
					"name": "[Filmes] Criar (POST)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salva o ID do filme criado numa variável de coleção",
									"pm.test(\"Movie ID received and saved\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.movie && jsonData.movie._id) {",
									"        pm.collectionVariables.set(\"movieId\", jsonData.movie._id);",
									"        console.log(\"ID do Filme salvo na variável 'movieId'\");",
									"    } else {",
									"        console.log(\"ID do Filme não encontrado na resposta\");",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Matrix\",\n  \"director\": \"Wachowskis\",\n  \"year\": 1999,\n  \"genre\": \"Sci-Fi\",\n  \"rating\": 9\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Filmes] Listar Todos (GET)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Filmes] Listar Filtrado (GET com Query)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies?genre=Sci-Fi&rating=8",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "genre",
									"value": "Sci-Fi"
								},
								{
									"key": "rating",
									"value": "8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[Filmes] Obter por ID (GET /:id)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/{{movieId}}", 
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Filmes] Atualizar Parcial (PATCH /:id)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"rating\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies/{{movieId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Filmes] Atualizar Completo (PUT /:id)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Matrix Reloaded\",\n  \"director\": \"Wachowskis\",\n  \"year\": 2003,\n  \"genre\": \"Sci-Fi\",\n  \"rating\": 7\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies/{{movieId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Filmes] Deletar (DELETE /:id)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/{{movieId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"{{movieId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro Filmes] Acesso sem token (401)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro Filmes] Acesso com token inválido (401)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "um.token.falso",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro Filmes] Criar Mal Formatado (sem título) (400)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"director\": \"Algum Diretor\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Erro Filmes] Acesso indevido (403)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}", 
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/{{movieIdOutroUsuario}}", 
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								"{{movieIdOutroUsuario}}"
							],
							"variable": [
								{
									"key": "movieIdOutroUsuario",
									"value": "<COLE_O_ID_DE_UM_FILME_DE_OUTRO_USUARIO_AQUI>"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api"
		},
		{
			"key": "authToken",
			"value": "<TOKEN_SERA_SALVO_AQUI_PELO_LOGIN>" 
		},
		{
			"key": "movieId",
			"value": "<ID_DO_FILME_SERA_SALVO_AQUI_PELO_CREATE>" 
		}
	]
}
